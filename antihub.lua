--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.1.7) ~  Much Love, Ferib 

]]--

do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=getfenv or function()return _ENV;end;local v9=setmetatable;local v10=pcall;local v11=select;local v12=unpack or table.unpack;local v13=tonumber;local function v14(v15,v16,...)local v17=1;local v18;v15=v4(v3(v15,5),"..",function(v29)if (v1(v29,2)==79) then v18=v0(v3(v29,1,1));return "";else local v64=0;local v65;while true do if (0==v64) then v65=v2(v0(v29,16));if v18 then local v86=0;local v87;while true do if (v86==1) then return v87;end if (v86==0) then v87=v5(v65,v18);v18=nil;v86=1;end end else return v65;end break;end end end end);local function v19(v30,v31,v32)if v32 then local v66=(v30/((1906 -(1177 + 727))^(v31-1)))%((2 + 0)^(((v32-(199 -(45 + 153))) -(v31-((1337 -(586 + 750)) -(505 -(284 + 221))))) + 1 + 0));return v66-(v66%(1068 -(983 + 44 + 40)));else local v67=0 + 0;local v68;while true do if (v67==(0 -0)) then v68=(1 + 1)^(v31-(1625 -(278 + 1346)));return (((v30%(v68 + v68))>=v68) and (1 + 0)) or ((353 -(167 + 186)) -0);end end end end local function v20()local v37=0 + 0;local v38;while true do if (v37==(715 -(453 + 262))) then v38=v1(v15,v17,v17);v17=v17 + (3 -2);v37=2 -(778 -(69 + 708));end if (v37==(1311 -(91 + 1219))) then return v38;end end end local function v21()local v39,v40=v1(v15,v17,v17 + 1 + 1);v17=v17 + 2 + 0;return (v40 * (940 -684)) + v39;end local function v22()local v41=0 -0;local v42;local v43;local v44;local v45;while true do if (v41==((2 -1) + 0)) then return (v45 * (16778381 -(23 + 206 + 936))) + (v44 * (32498 + (35031 -(294 + 1699)))) + (v43 * (135 + 121)) + v42;end if ((0 + 0)==v41) then v42,v43,v44,v45=v1(v15,v17,v17 + 3 + 0);v17=v17 + (10 -6);v41=1 + 0;end end end local function v23()local v46=v22();local v47=v22();return (( -(1 + 1) * v19(v47,234 -(12 + 32 + 158))) + 1 + 0) * ((1780 -((1355 -(1020 + 173)) + (3418 -1802)))^(v19(v47,1701 -(1366 + 314),1076 -(113 + 299 + 633)) -(3011 -(1014 + 237 + 737)))) * ((((v19(v47,1,20) * ((427 -(65 + 360))^32)) + v46)/((1588 -(909 + 677))^52)) + (1 -0));end local function v24(v33)local v48=0 -0;local v49;local v50;while true do if (v48==(0 + 0)) then v49=nil;if  not v33 then local v74=0 -0;while true do if (v74==(0 + 0)) then v33=v22();if (v33==0) then return "";end break;end end end v48=1 -0;end if (v48==(4 -2)) then v50={};for v72=1, #v49 do v50[v72]=v2(v1(v3(v49,v72,v72)));end v48=829 -(776 + 50);end if ((1920 -(879 + 1040))==v48) then v49=v3(v15,v17,(v17 + v33) -(4 -3));v17=v17 + v33;v48=3 -1;end if (v48==(4 -(1585 -(72 + 1512)))) then return v6(v50);end end end local v25=v22;local function v26(...)return {...},v11("#",...);end local function v27()local v51=0;local v52;local v53;local v54;local v55;local v56;local v57;local v58;local v59;while true do if (v51==0) then v52=0;v53=nil;v51=1750 -(285 + 1464);end if (v51==3) then v58=nil;v59=nil;v51=4;end if (v51==(1769 -(673 + 1092))) then while true do if (v52==(1 -0)) then local v81=1572 -(1280 + 292);local v82;while true do if (v81==(0 -0)) then v82=0 -0;while true do if (v82==(2 -1)) then v52=2;break;end if ((0 -0)==v82) then v55=nil;v56=nil;v82=1;end end break;end end end if ((528 -(89 + 436))==v52) then v59=nil;while true do local v88=0;while true do if (v88==0) then local v90=0;while true do if (v90~=(913 -(515 + 398))) then else if (v53==(2 -1)) then local v113=0;local v114;local v115;while true do if (v113==1) then while true do if (v114~=0) then else v115=0 -0;while true do if ((4 -2)==v115) then v53=2;break;end if (v115~=0) then else local v128=0 -0;local v129;while true do if ((275 -(128 + 147))==v128) then v129=1292 -(239 + 1053);while true do if (1~=v129) then else v115=1 -0;break;end if (v129==0) then local v249=0 -0;while true do if (v249~=(0 -0)) then else v58=v22();v59={};v249=1;end if (v249==(1 + 0)) then v129=186 -(101 + 84);break;end end end end break;end end end if (v115==1) then local v130=0 -0;local v131;while true do if (v130~=0) then else v131=0 + 0;while true do if (v131==0) then for v276=1,v58 do local v277=354 -(49 + 305);local v278;local v279;local v280;while true do if (v277~=(1131 -(333 + 797))) then else v280=nil;while true do if (v278==1) then if (v279==1) then v280=v20()~=(0 -0);elseif (v279==(1239 -(882 + 355))) then v280=v23();elseif (v279==3) then v280=v24();end v59[v276]=v280;break;end if (v278~=0) then else local v336=0 -0;while true do if (0==v336) then v279=v20();v280=nil;v336=1;end if (v336~=(2 -1)) then else v278=860 -(446 + 413);break;end end end end break;end if (v277==0) then v278=0 -0;v279=nil;v277=1;end end end v57[3]=v20();v131=1;end if (v131==1) then v115=5 -3;break;end end break;end end end end break;end end break;end if (v113==0) then v114=169 -(65 + 104);v115=nil;v113=1 -0;end end end if (v53==(0 + 0)) then local v116=0;local v117;local v118;while true do if (v116==(1682 -(1233 + 448))) then while true do if (v117==0) then v118=0;while true do if (v118==(3 -2)) then local v132=0 + 0;while true do if (v132==(203 -(197 + 6))) then v56={};v57={v54,v55,nil,v56};v132=1 -0;end if (v132==(1150 -(788 + 361))) then v118=2;break;end end end if (v118==0) then local v133=1406 -(1080 + 326);while true do if (v133==1) then v118=1;break;end if (v133~=0) then else local v236=0;while true do if (v236==1) then v133=1 + 0;break;end if (v236~=(0 -0)) then else v54={};v55={};v236=1 + 0;end end end end end if (v118==2) then v53=1992 -(1234 + 757);break;end end break;end end break;end if (v116==(0 + 0)) then v117=0;v118=nil;v116=1 + 0;end end end v90=1;end if (v90~=1) then else v88=1 + 0;break;end end end if (v88~=(1 + 0)) then else if (v53~=(4 -2)) then else local v104=1181 -(803 + 378);local v105;while true do if (v104==0) then v105=1071 -(66 + 1005);while true do if (v105~=1) then else for v120=1,v22() do v56[v120]=v22();end return v57;end if (v105==(0 + 0)) then local v119=0 -0;while true do if ((406 -(294 + 111))~=v119) then else v105=1;break;end if (v119~=(0 -0)) then else for v122=1 -0,v22() do local v123=0 -0;local v124;local v125;while true do if (v123==1) then while true do if (v124~=(0 + 0)) then else v125=v20();if (v19(v125,1,1 + 0)==(0 -0)) then local v251=285 -(250 + 35);local v252;local v253;local v254;local v255;local v256;while true do if (v251~=(1 + 0)) then else local v303=0;while true do if (v303==0) then v254=nil;v255=nil;v303=1;end if ((698 -(223 + 474))==v303) then v251=1 + 1;break;end end end if ((0 -0)==v251) then v252=0 + 0;v253=nil;v251=125 -(85 + 39);end if (2==v251) then v256=nil;while true do if (0~=v252) then else local v320=0 + 0;while true do if (v320==(1 + 0)) then v252=1;break;end if (v320~=0) then else v253=0;v254=nil;v320=1;end end end if (2==v252) then while true do if (v253==3) then if (v19(v255,3,2 + 1)==1) then v256[6 -2]=v59[v256[4]];end v54[v122]=v256;break;end if (v253~=(630 -(33 + 596))) then else local v355=1809 -(1793 + 16);local v356;local v357;while true do if ((0 -0)==v355) then v356=0 + 0;v357=nil;v355=1;end if (v355==1) then while true do if (v356~=0) then else v357=0;while true do if (v357~=(1789 -(535 + 1253))) then else v253=2;break;end if (v357~=0) then else v256={v21(),v21(),nil,nil};if (v254==0) then local v398=881 -(338 + 543);local v399;while true do if (v398~=0) then else v399=0 + 0;while true do if ((0 + 0)==v399) then v256[3]=v21();v256[6 -2]=v21();break;end end break;end end elseif (v254==1) then v256[1476 -(1279 + 194)]=v22();elseif (v254==2) then v256[3 + 0]=v22() -((5 -3)^(11 + 5));elseif (v254==(10 -7)) then local v407=0 + 0;local v408;while true do if (v407==(389 -(315 + 74))) then v408=0;while true do if (v408==0) then v256[101 -(11 + 87)]=v22() -(2^(2014 -(505 + 1493)));v256[4]=v21();break;end end break;end end end v357=1 + 0;end end break;end end break;end end end if (v253==(1 + 1)) then local v358=0;local v359;while true do if (v358~=(0 -0)) then else v359=0;while true do if (v359~=0) then else if (v19(v255,1 + 0,1 + 0)==(1 -0)) then v256[2]=v59[v256[6 -4]];end if (v19(v255,822 -(103 + 717),1 + 1)==(2 -1)) then v256[3]=v59[v256[576 -(253 + 320)]];end v359=1 + 0;end if (v359==1) then v253=2 + 1;break;end end break;end end end if (v253==(0 -0)) then local v360=0 + 0;local v361;while true do if (v360==(0 -0)) then v361=0;while true do if (v361==0) then v254=v19(v125,2,2 + 1);v255=v19(v125,4,6);v361=2 -1;end if ((2 -1)==v361) then v253=2 -1;break;end end break;end end end end break;end if (v252==(2 -1)) then v255=nil;v256=nil;v252=2 + 0;end end break;end end end break;end end break;end if (v123~=0) then else v124=0;v125=nil;v123=2 -1;end end end for v126=1,v22() do v55[v126-1]=v27();end v119=1;end end end end break;end end end break;end end end break;end if (v52~=(1809 -(531 + 1276))) then else local v83=0;while true do if (v83==1) then v52=1591 -(1353 + 235);break;end if (v83==0) then local v89=0;while true do if (v89==(1 + 0)) then v83=1;break;end if (v89~=0) then else v57=nil;v58=nil;v89=1818 -(1049 + 768);end end end end end if (v52==0) then local v84=0 + 0;local v85;while true do if ((1450 -(109 + 1341))==v84) then v85=0;while true do if (v85~=(1 + 0)) then else v52=1;break;end if ((520 -(160 + 360))==v85) then local v106=0 + 0;while true do if (v106==(0 -0)) then v53=0;v54=nil;v106=537 -(498 + 38);end if (1==v106) then v85=1;break;end end end end break;end end end end break;end if (v51==(2 + 0)) then v56=nil;v57=nil;v51=2 + 1;end if ((1 + 0)~=v51) then else v54=nil;v55=nil;v51=181 -(105 + 74);end end end local function v28(v34,v35,v36)local v60=0;local v61;local v62;local v63;while true do if (0==v60) then v61=v34[1];v62=v34[2];v60=1;end if (1==v60) then v63=v34[3];return function(...)local v75=0;local v76;local v77;local v78;local v79;local v80;while true do if (v75==2) then v80=nil;v80=function()local v91=v61;local v92=v62;local v93=v63;local v94=v26;local v95={};local v96={};local v97={};for v102=0 + 0 + 0,v79 do if ((640<=(497 + 1921)) and (v102>=v93)) then v95[v102-v93]=v78[v102 + (2 -1)];else v97[v102]=v78[v102 + 1 + (0 -0)];end end local v98=(v79-v93) + 1 + 0;local v99;local v100;while true do local v103=0;while true do if ((1711<(8038 -3665)) and (v103==(3 -2))) then if ((v100<=(9 + 12)) or ((1473 + 509)>(551 + 4179))) then if ((v100<=10) or (((4033 + 85) -3152)>=(3680 -(392 + 156)))) then if ((v100<=(1205 -((1211 -841) + 831))) or (3467<(2459 -((2181 -1211) + 774)))) then if ((v100<=(1 + 0)) or ((6771 -2777)==(1124 -((46 -25) + 171)))) then if ((((4899 -3358) + 467)>(6031 -4246)) and (v100==(1342 -(1156 + 186)))) then if ((v97[v99[1 + 1]]==v97[v99[4]]) or ((6091 -((4308 -3208) + 621))<(16671 -12356))) then v76=v76 + 1;else v76=v99[1206 -(59 + 1144)];end else v97[v99[2]]=v97[v99[1823 -(19 + 230 + 1571)]][v97[v99[7 -3]]];end elseif ((v100<=2) or ((36 + 3056 + 1475)<(14590 -10420))) then local v136=0 -0;local v137;local v138;while true do if ((v136==(0 + (1143 -(283 + 860)))) or ((5492 -(1176 + 399))==(1339 -((2219 -1432) + 465)))) then v137=0;v138=nil;v136=1;end if ((v136==(1 + 0)) or ((11450 -7106)<(2838 -(357 + 196)))) then while true do if ((v137==(0 -0)) or (1362==(6116 -(602 + 1156)))) then v138=v99[4 -2];do return v97[v138](v12(v97,v138 + (1448 -(1384 + 43 + 20)),v99[8 -5]));end break;end end break;end end elseif (((304 -((337 -184) + 139))<(7429 -2768)) and (v100==(1203 -(1047 + 153)))) then local v176=0 -0;local v177;local v178;local v179;local v180;while true do if (((1 + 0)==v176) or ((3508 -(2752 -1305))<(1467 -670))) then v179=nil;v180=nil;v176=510 -(350 + 158);end if ((v176==(6 -4)) or ((5932 -(109 + 1629))<=2081)) then while true do if ((v177==1) or (835==(4233 + 202))) then v180=v97[v178] + v179;v97[v178]=v180;v177=261 -(21 + 238);end if ((v177==((1290 -(205 + 280)) -((1127 -(95 + 385)) + 156))) or ((5481 -2377)==2496)) then if (((4208 -3141)==(385 + 682)) and (v179>(0 -0))) then if (((1373 -(147 + 72))<=(10320 -5669)) and (v180<=v97[v178 + (1567 -(12 + 1554))])) then local v321=0 -0;local v322;while true do if ((((81 + 2992) -592)>(2959 -1609)) and (v321==(0 + 0))) then v322=0 -0;while true do if ((1455>=(2984 -2063)) and (v322==(0 + 0))) then v76=v99[2 + 1];v97[v178 + (1864 -(1601 + 260))]=v180;break;end end break;end end end elseif ((v180>=v97[v178 + ((2332 -(385 + 305)) -(641 + 1000))]) or ((5891 -4261)<=((3876 -2840) -421))) then local v323=0 -0;local v324;local v325;while true do if ((v323==(1919 -(1855 + 63))) or ((1066 + 2848)>=(8663 -4504))) then while true do if (((97 + 3804)>=(1705 -(492 + 829))) and (v324==(1623 -(1475 + 148)))) then v325=0 + (0 -0);while true do if (((0 -0)==v325) or ((310 + 4372)<(5612 -(11903 -7777)))) then v76=v99[3 + 0];v97[v178 + (593 -(50 + 14 + 526))]=v180;break;end end break;end end break;end if (((211 + 556)<=(6646 -2738)) and ((1366 -((2767 -(1081 + 563)) + 243))==v323)) then v324=(754 -(212 + 542)) -0;v325=nil;v323=1 + 0;end end end break;end if (((543 + 3236)>(2685 -1369)) and (v177==(0 + 0))) then local v290=0 -0;while true do if ((v290==(0 -0)) or (3258<=(7331 -4377))) then v178=v99[1701 -(1612 + 87)];v179=v97[v178 + (120 -(6 + 112))];v290=1 + 0;end if (((2717 -(849 + 243))>=(1933 -951)) and (v290==(1 + 0))) then v177=1 -0;break;end end end end break;end if ((v176==(722 -(309 + 413))) or ((1815 + 1074)<(7730 -5077))) then v177=0 + 0;v178=nil;v176=1;end end else v97[v99[2 -0]]=v97[v99[5 -2]] -v99[4 + 0];end elseif ((v100<=(1686 -((2063 -(492 + 795)) + (1881 -(699 + 279))))) or ((1894 -(342 + (1513 -(143 + 552))))==((218 + 3391) -(1325 + 610)))) then if ((v100<=5) or ((1109 + 1322)>(1193 + 2481))) then do return;end elseif (((128 + (2677 -708))>(1543 -((136 -53) + 231))) and (v100==(243 -(216 + 21)))) then v97[v99[2]]=v35[v99[5 -(622 -(170 + 450))]];elseif (((13126 -9668)>=759) and (v99[5 -3]==v97[v99[14 -10]])) then v76=v76 + (3 -2);else v76=v99[944 -(235 + 706)];end elseif (((2344 -(14 + (159 -127)))<=(3525 + 838)) and (v100<=(3 + 5))) then v97[v99[7 -5]][v97[v99[1694 -(965 + 726)]]]=v97[v99[1398 -(259 + 126 + 1009)]];elseif (((3094 -(471 + 1195))<(1610 + 11)) and (v100==((5 + 10) -6))) then v97[v99[1540 -((1370 -(307 + 870)) + 1345)]]=v97[v99[7 -4]][v99[3 + (1 -0)]];else local v186=0 -0;local v187;while true do if ((v186==0) or ((62 + 18 + 268)==(1595 -(586 + 279)))) then v187=v99[4 -2];do return v12(v97,v187,v77);end break;end end end elseif ((v100<=(20 -5)) or ((493 -(5 + 377))>=(4312 -1689))) then if (((831 -(332 + 174))<(99 + (9550 -6938))) and (v100<=(3 + (1591 -(1524 + 58))))) then if ((v100>11) or ((2207 -1511)<=509)) then local v141=0 -(0 + 0);local v142;local v143;local v144;local v145;local v146;while true do if (((12239 -7718)>(507 + 3346)) and (v141==(960 -(260 + 700)))) then v142=0 -0;v143=nil;v141=1 -(0 + 0);end if (((3335 -(1323 + 666))>(1235 -(52 + 703))) and (v141==(1 + 1))) then v146=nil;while true do if ((v142==(0 -0)) or (((15262 -7971) -(3923 + 1759))>(661 + 3891))) then local v258=0;while true do if ((v258==(238 -(121 + 116))) or ((4247 -(879 + 282))>=(415 + (8853 -4522)))) then v142=1 + 0;break;end if ((v258==(0 + 0)) or ((4218 -1355)<2744)) then v143=v99[2 + 0];v144,v145=v94(v97[v143](v12(v97,v143 + (1927 -(108 + 1818)),v77)));v258=1007 -(929 + 77);end end end if ((2838>(3355 -(259 + 941))) and (v142==1)) then local v259=0;local v260;while true do if (((3429 -1029)>(6167 -3975)) and (v259==(0 + 0))) then v260=0 -0;while true do if ((((2231 -(1453 + 278)) -229)<(8959 -4639)) and (v260==(1807 -(962 + 844)))) then v142=1 + 1;break;end if (((849 + 2267)>=2291) and (v260==(0 + 0))) then local v326=0 + 0;while true do if ((v326==(1655 -(233 + 40 + 1382))) or ((14357 -9639)==(4862 -(674 + 414)))) then v77=(v145 + v143) -1;v146=0 + 0;v326=1596 -(158 + (3043 -(1005 + 601)));end if (((1632 -(439 + 438))<=(3618 -(13 + 840))) and (v326==1)) then v260=1;break;end end end end break;end end end if ((((4864 -(1688 + 12)) -(22 + 373))>(3397 -1938)) and (v142==2)) then for v281=v143,v77 do local v282=0 -0;local v283;while true do if ((v282==(1054 -(192 + 110 + 752))) or ((1731 -718)<=(2909 -(364 + 1569)))) then v283=0 -0;while true do if (((2578 + (697 -(48 + 52)))<4724) and (v283==0)) then v146=v146 + (1423 -(887 + 535));v97[v281]=v144[v146];break;end end break;end end end break;end end break;end if ((((6432 -(299 + 608)) -(1053 + 863))>=((15879 -11935) -((2294 -(1605 + 326)) + (1521 -(697 + 658))))) and (v141==(1 + 0))) then v144=nil;v145=nil;v141=1 + 1;end end else local v147=0 + 0;local v148;local v149;while true do if (((1 + 0)==v147) or ((128 + 465 + 551)>4973)) then while true do if (((1427 + 1368)>(1834 + 534 + 181)) and ((984 -(203 + 781))==v148)) then v149=v99[1615 -(942 + 671)];v97[v149]=v97[v149]();break;end end break;end if ((1738==1738) and (v147==0)) then v148=0;v149=nil;v147=1;end end end elseif (((2774 -(233 + 205))<2338) and (v100<=(794 -((635 -456) + 602)))) then if (((10833 -7154)>(2689 + 843)) and v97[v99[(5 -2) -1]]) then v76=v76 + (1021 -(981 + 39));else v76=v99[10 -7];end elseif ((v100==(4 + 10)) or ((6616 -(1308 + 345))<(3509 -2284))) then local v189=0 + 0;local v190;local v191;while true do if ((v189==(553 -(201 + 258 + (319 -226)))) or ((4417 -2545)<1076)) then while true do if ((v190==(1187 -(264 + 923))) or (95>(2585 + 2229))) then v191=v97[v99[3 + 1]];if (((5177 -(45 + 1430))<=(2726 + 1235 + 760)) and  not v191) then v76=v76 + 1;else local v314=0;while true do if ((v314==(0 + 0)) or ((475 + 68)==((5733 + 7470) -9877))) then v97[v99[2]]=v191;v76=v99[3];break;end end end break;end end break;end if ((v189==((1761 -(10 + 269)) -(654 + 828))) or (2540>=(335 + 4043))) then v190=(2183 -712) -(679 + 792);v191=nil;v189=2 -(3 -2);end end else local v192=650 -(54 + 495 + 101);local v193;local v194;while true do if ((v192==(1 + 0 + 0)) or ((1504 -405)>=((6670 -(367 + 1106)) -(126 + 135)))) then while true do if (((8197 -(7744 -4278))==(18491 -13760)) and (v193==(1564 -(1124 + 440)))) then v194=v99[7 -5];v97[v194]=v97[v194](v97[v194 + 1 + (0 -0)]);break;end end break;end if (((1139 -720)==(786 -(158 + 209))) and (v192==(0 + 0))) then v193=0 -0;v194=nil;v192=1053 -(222 + 830);end end end elseif ((v100<=(14 + 4)) or ((5079 -3192)==((17380 -12150) -(340 + 511)))) then if ((((7914 -(377 + 909)) -3942)>(2382 -(149 + 123))) and (v100<=(26 -(2 + 8)))) then local v150=0 -0;local v151;local v152;local v153;local v154;while true do if (((5979 -2485)>(1697 + 212 + 15)) and (v150==(108 -(76 + 32)))) then v151=881 -(80 + 801);v152=nil;v150=1 + 0;end if (((2242 + 463)<(6314 -3204)) and ((1 -0)==v150)) then local v237=0;while true do if (((12297 -8671)==(892 + 2734)) and (v237==((1 -0) -0))) then v150=1797 -(25 + 47 + 1723);break;end if ((v237==(789 -(500 + 289))) or (425<=((3091 -1316) -(387 + 1020)))) then v153=nil;v154=nil;v237=1 + 0 + 0;end end end if ((v150==2) or ((1750 -(399 + 73))>=(2907 + 656))) then while true do if ((v151==(1 + 0)) or ((1544 + 2353)<=(2134 + 1039))) then local v263=0 + 0;local v264;while true do if ((v263==(1288 -((1141 -(101 + 13)) + 261))) or ((3500 -(1154 + 390))>(1050 + 1143))) then v264=0 + 0;while true do if ((4624>((3243 -(1009 + 17)) -935)) and ((0 -0)==v264)) then v154={};v153=v9({},{__index=function(v341,v342)local v347=0 + 0;local v348;local v349;while true do if ((v347==0) or (1307==(203 + 658))) then local v377=0 -0;while true do if (((4855 -(1574 + 221))<=(10252 -5788)) and ((0 + 0)==v377)) then v348=0 -0;v349=nil;v377=1;end if (((7341 -3451)==(4028 -(69 + 69))) and (1==v377)) then v347=1;break;end end end if ((v347==(2 -1)) or ((10306 -7164)==(2910 -(454 + 1472)))) then while true do if ((v348==0) or (2590>=(11145 -(8659 -(621 + 555))))) then local v382=(0 + 0) -0;while true do if (((3957 + 600)>3233) and (v382==0)) then v349=v154[v342];return v349[(1708 -(699 + 57)) -(915 + 36)][v349[812 -(584 + 226)]];end end end end break;end end end,__newindex=function(v343,v344,v345)local v350=0 -0;local v351;local v352;while true do if ((803<=(5629 -(422 + 567))) and (v350==(0 + 0))) then v351=0 -(303 -(167 + 136));v352=nil;v350=2 -1;end if ((((3136 -(299 + 86)) -((1163 -(187 + 389)) + 376))<=4945) and (v350==(1576 -(1429 + 146)))) then while true do if (((0 + 0)==v351) or ((2901 -1054)>=(1738 + 2288))) then v352=v154[v344];v352[(1462 -(325 + 1136)) + 0][v352[900 -(370 + 312 + 216)]]=v345;break;end end break;end end end});v264=(902 -(808 + 93)) -0;end if (((1360 + 23)>=480) and ((1384 -(762 + (2168 -1547)))==v264)) then v151=1 + 1;break;end end break;end end end if (((9047 -6367)==(2831 -(21 + 130))) and ((0 + 0)==v151)) then local v265=0;while true do if (((18079 -14101)>(1073 -(218 + 19))) and (v265==(3 -2))) then v151=1;break;end if (((309 + 4547)>4197) and (v265==(0 -(0 -0)))) then v152=v92[v99[3 + 0]];v153=nil;v265=1;end end end if (((3640 -2391)>(1768 -(287 + 123 + (292 -156)))) and (v151==2)) then for v284=(1 -0) + 0,v99[1 + 3] do local v285=0 -0;local v286;local v287;local v288;while true do if ((v285==(3 -2)) or ((3042 + 1405)<=(1613 + 1397))) then v288=nil;while true do if (((54 + 833)==(2269 -(1085 + 26 + 271))) and (v286==(995 -(30 + 965)))) then local v346=0;while true do if (((3433 -((3421 -2263) + 127))<=(3045 + 1404)) and (v346==(0 + 0))) then v287=963 -(948 + 15);v288=nil;v346=1 -0;end if (((10302 -5737)>(5043 -1516)) and (v346==(2 -1))) then v286=1 + 0 + 0;break;end end end if (((8552 -4807)>(121 + (865 -550))) and ((1 + 0)==v286)) then while true do if (((4491 -(84 + 48))>((10231 -4681) -(1265 + 62))) and (v287==(1 -0))) then if (((6204 -(450 + 846))>=(9300 -5709)) and (v288[1]==(2030 -(602 + 1386)))) then v154[v284-(782 -(101 + 680))]={v97,v288[(1897 -(1151 + 744)) + 1]};else v154[v284-((2 -1) + 0)]={v35,v288[6 -(349 -(227 + 119))]};end v96[ #v96 + (1279 -(1130 + 148))]=v154;break;end if ((4520>=(347 -(36 + 19))) and (v287==0)) then local v366=0 -0;local v367;while true do if ((v366==(0 + 0)) or (767>(1725 -(524 + 121)))) then v367=0 + 0;while true do if (((3 -2)==v367) or ((208 + (1525 -944))>(3031 -(428 + 531)))) then v287=595 -(285 + 309);break;end if (((1165 + 358)>=(254 + 1263)) and (v367==((0 -0) + 0))) then local v387=0;while true do if ((v387==(1 + 0)) or ((1609 -(369 + 75))>=(1963 + 308))) then v367=2 -1;break;end if ((v387==(0 -0)) or ((403 + 444 + 1322)<=(655 + 63 + 216))) then v76=v76 + (1 -0);v288=v91[v76];v387=2 -1;end end end end break;end end end end break;end end break;end if (((1971 + 2984)>=4099) and (v285==(0 + 0))) then v286=0 + (547 -(541 + 6));v287=nil;v285=1096 -(105 + 990);end end end v97[v99[2 + (1329 -(590 + 739))]]=v28(v152,v153,v36);break;end end break;end end elseif (((62 + 627 + 251)<(2548 + 376)) and (v100==17)) then local v195=0 -0;local v196;local v197;while true do if ((v195==(1 + 0 + 0)) or ((568 -123)>=(864 + 3302))) then while true do if ((v196==(0 -0)) or ((443 + 893)>(2523 + (912 -(68 + 171))))) then v197=v99[4 -2];v97[v197](v97[v197 + 1 + 0]);break;end end break;end if ((v195==(0 -0)) or (3027<=2256)) then v196=1621 -(501 + 1120);v197=nil;v195=1;end end else v97[v99[1246 -(1082 + (1561 -(292 + 1107)))]]=v97[v99[3]]%v97[v99[12 -8]];end elseif ((((3796 -(870 + 11)) -(1507 + 61))==(2577 -(474 + 756))) and (v100<=19)) then v97[v99[2 + 0]]=v97[v99[12 -9]] + v99[555 -(353 + 198)];elseif (((463 -320)<=3653) and (v100==(35 -(744 -(340 + 389))))) then local v199=(2720 -1482) -(1084 + 154);local v200;local v201;local v202;while true do if ((v199==0) or ((1201 -(835 + 209))==(4782 -2789))) then local v246=0 -0;while true do if ((1480==(2551 -(28 + 1043))) and (v246==(704 -(390 + 313)))) then v199=1 + 0;break;end if (((5391 -2442)>1947) and (v246==(0 -0))) then v200=0 -0;v201=nil;v246=2 -1;end end end if (((4791 + 177)>(9612 -6081)) and (v199==1)) then v202=nil;while true do if (((0 + 0)==v200) or (4190<(9184 -6960))) then local v295=469 -(235 + 234);while true do if ((v295==(1 -0)) or (2423<(5215 -3702))) then v200=3 -2;break;end if (((6247 -(409 + 252 + (1471 -(246 + 314))))>=(329 + 2806)) and (v295==(1872 -(34 + 1838)))) then local v317=757 -(291 + 466);while true do if ((v317==1) or ((3777 -(636 + 19))>(16257 -12165))) then v295=2 -1;break;end if ((232<=350) and (v317==0)) then v201=v99[1 + 1];v202={};v317=1745 -(96 + 1648);end end end end end if ((v200==(458 -(441 + 16))) or ((283 + 4018)<10)) then for v306=2 -1, #v96 do local v307=(1858 -(171 + 178)) -(1034 + 273 + 202);local v308;local v309;while true do if (((1608 + 1095)>(1685 -(234 + (2468 -1940)))) and ((1 -0)==v307)) then while true do if ((v308==(0 + 0)) or (((4513 -2260) + 2162)>(18828 -14098))) then v309=v96[v306];for v368=0, #v309 do local v369=1855 -(149 + 1706);local v370;local v371;local v372;local v373;local v374;while true do if (((177 + 1246)<=(3583 -2137)) and (v369==(1158 -(470 + 688)))) then v370=0;v371=nil;v369=(671 + 534) -(350 + 854);end if ((811<=(661 + 824)) and (v369==(739 -(206 + 531)))) then v374=nil;while true do if (((298 + 4630)>(2549 -(872 + 662))) and (v370==(6 -4))) then while true do if ((((16309 -12254) -2439)<=(4507 -(701 + 811))) and (v371==(364 -(234 + 130)))) then local v395=0 -0;local v396;while true do if ((v395==((1759 + 189) -(215 + 1733))) or ((6845 -2754)>(2529 + 2458))) then v396=0 -0;while true do if (((1419 + 1797)>((697 -(64 + 10)) + 129)) and (v396==(1782 -(330 + 1451)))) then v371=2 -1;break;end if ((v396==(1383 -(350 + 1033))) or ((15547 -11451)<(3574 -(166 + 80)))) then local v404=0 -0;while true do if ((v404==(1 -0)) or (((381 + 4952) -(1471 + 294))<(2677 -(812 + 476)))) then v396=3 -2;break;end if ((3796>338) and (v404==(1515 -(600 + 915)))) then v372=v309[v368];v373=v372[1 + 0];v404=(480 -(330 + 149)) + 0;end end end end break;end end end if (((871 -(436 + 434))==v371) or ((3961 -(318 + 337))==(3130 -(18 + 1006)))) then v374=v372[491 -(370 + 119)];if (((8225 -4431)==(8890 -5096)) and (v373==v97) and (v374>=v201)) then local v400=935 -(589 + 346);local v401;while true do if ((v400==(0 -0)) or ((9533 -5837)>=(5448 -(566 + 589)))) then v401=0 + 0;while true do if (((79 + 11)<=(2304 -((1135 -(31 + 107)) + 84))) and (0==v401)) then v202[v374]=v373[v374];v372[1]=v202;break;end end break;end end end break;end end break;end if (((8718 -3869)>(1973 + 1019)) and (v370==(920 -(836 + 84)))) then v371=(1932 -(1642 + 290)) -0;v372=nil;v370=901 -(340 + 560);end if (((1 + 0)==v370) or (((4350 -2607) -(265 + 343 + 204))>(211 + 3962))) then local v388=689 -(106 + 370 + 213);while true do if (((7551 -4075)<(3154 + 1147)) and (v388==1)) then v370=2;break;end if (((5546 -(1270 + 589))>(742 + 2071)) and (((0 + 0) -0)==v388)) then v373=nil;v374=nil;v388=1 + 0 + 0;end end end end break;end if (((3736 + 568)==((5834 -(96 + 183)) -(1140 + 111))) and (v369==(1648 -((1251 -705) + (1510 -(404 + 5)))))) then v372=nil;v373=nil;v369=2 -0;end end end break;end end break;end if ((1396<=4437) and (v307==(1846 -(230 + (4143 -2527))))) then v308=0 -0;v309=nil;v307=1 + 0;end end end break;end end break;end end else local v203=0 -0;local v204;local v205;local v206;local v207;local v208;while true do if (((2556 + 23 + 923)>=1887) and (v203==(1546 -(61 + 1473 + 12)))) then v204=0;v205=nil;v203=1 + 0 + 0;end if ((v203==(4 -2)) or ((1267 + 910)<=(2061 -(172 + 110)))) then v208=nil;while true do if ((v204==2) or (2616>((26237 -16464) -6074))) then for v310=v205,v77 do local v311=1665 -(135 + 22 + 1508);local v312;while true do if ((v311==(329 -(293 + (165 -129)))) or ((7425 -2672)<4153)) then v312=1223 -(1173 + 50);while true do if ((2900>=(6666 -3882)) and (v312==(929 -(618 + 311)))) then v208=v208 + 1;v97[v310]=v206[v208];break;end end break;end end end break;end if (((4371 -(170 + 417))>(91 + 415)) and (v204==(1 -0))) then local v296=0 + 0;while true do if ((491<=((4200 -(281 + 501)) -(57 + 23))) and (v296==1)) then v204=1487 -(979 + 506);break;end if (((0 + 0)==v296) or ((4734 -3378)>(5601 -(726 + 843)))) then v77=(v207 + v205) -(4 -3);v208=0 + 0;v296=493 -(190 + 302);end end end if ((v204==0) or (1950>=((4959 -(93 + 1770)) + 555))) then local v297=0;while true do if ((v297==(0 -(0 + 0))) or (77>(827 + 1057))) then v205=v99[5 -3];v206,v207=v94(v97[v205](v12(v97,v205 + (1983 -(103 + 1879)),v99[1686 -(422 + 1261)])));v297=1;end if (((1750 -(1099 + 373))<(199 + 479)) and (v297==(1 + 0))) then v204=1 + 0;break;end end end end break;end if ((v203==(1 -0)) or ((4453 -(665 + 1208))<=(1349 -(899 + 242)))) then v206=nil;v207=nil;v203=2 + 0;end end end elseif ((v100<=((2262 -(1377 + 295)) -(496 + 62))) or ((9748 -7608)<((4178 -(387 + 21)) -(751 + 1000)))) then if ((v100<=(925 -(755 + 144))) or ((672 + 423)==(2011 -541))) then if ((v100<=(8 + 15)) or ((12071 -7431)<=(4874 -(664 + 1212)))) then if ((v100==(8 + 14)) or ((14357 -10092)<=1403)) then local v156=1016 -(196 + 687 + 133);local v157;local v158;local v159;while true do if ((v156==1) or ((1656 -503)==(385 + 2648 + 580))) then v159=nil;while true do if (((5187 -(71 + 1840))>(946 + 13)) and (v157==1)) then v97[v158 + (978 -(655 + 322))]=v159;v97[v158]=v159[v99[4]];break;end if ((v157==(0 + 0)) or (255>=(455 -158))) then local v270=0 -(0 -0);while true do if ((737<(4049 -(508 + 1002))) and (v270==(2 -1))) then v157=1 + 0;break;end if (((716 -(626 + 90))==v270) or (3617>(6256 -(12 + 1271)))) then local v313=152 -((267 -168) + 53);while true do if (((13562 -8628)>=((1428 -785) + 3490)) and (v313==(3 -2))) then v270=3 -2;break;end if (((734 -(132 + 602))==v313) or ((4561 -(143 + 1002))>(5054 -((1756 -(135 + 1536)) + 1009)))) then v158=v99[2 + 0];v159=v97[v99[2 + 1]];v313=1 + 0;end end end end end end break;end if ((v156==(0 -0)) or ((1084 + 45)>=2082)) then local v238=0 -0;while true do if ((v238==(772 -(411 + 361))) or ((60 + 1288)>=((6876 -5151) + 107))) then v157=0 + 0;v158=nil;v238=1 + 0;end if (((606 + 144)==(46 + 704)) and (v238==(2 -1))) then v156=3 -2;break;end end end end else local v160=780 -(219 + 73 + 488);local v161;while true do if (((512 + 4314)>=(4815 -(213 + 35))) and (v160==0)) then v161=v99[2];v97[v161](v12(v97,v161 + 1 + 0,v99[3 + 0]));break;end end end elseif ((v100<=(944 -(504 + 416))) or ((7347 -3383)<=(1997 -(1344 + 162)))) then v76=v99[1 + (728 -(684 + 42))];elseif ((v100==(147 -(115 + 7))) or ((4548 -(314 + 1133))<1341)) then for v240=v99[782 -(193 + 587)],v99[3] do v97[v240]=nil;end else v97[v99[2]][v97[v99[(3473 -(1676 + 155)) -(1462 + 177)]]]=v99[4 + 0 + 0];end elseif (((1520 + 648)>(77 -49)) and (v100<=(411 -(336 + 46)))) then if ((1726>(4409 -3192)) and (v100<=27)) then v97[v99[2]][v99[3]]=v97[v99[(25 -16) -5]];elseif ((v100==28) or ((475 + 2325)<=(320 + 405 + 574))) then v97[v99[7 -5]]= #v97[v99[(9 -3) -3]];elseif (((10714 -7620)>=(2592 -1136)) and (v97[v99[(349 -(85 + 259)) -3]]==v99[9 -5])) then v76=v76 + 1 + 0 + 0;else v76=v99[1584 -(1361 + 220)];end elseif ((v100<=(9 + 21)) or ((5827 -3509)==(171 + 878))) then v97[v99[2 -0]]={};elseif ((v100>(66 -35)) or (293>(874 + 3500))) then v97[v99[247 -(93 + 120 + 32)]]=v99[496 -(174 + 319)]~=(0 + 0);else local v213=0 + 0;local v214;local v215;local v216;local v217;while true do if ((v213==(2 -(0 -0))) or ((1359 -(1302 + 18))>(2731 + 1246))) then while true do if ((((1520 -(27 + 874)) -244)<(1212 + 1600)) and (((0 -0) + (467 -(109 + 358)))==v214)) then v215=v99[2 + 0];v216=v97[v215];v214=1205 -(1151 + 53);end if ((v214==(556 -(118 + 437))) or (((1582 -(577 + 907)) -57)>=(4998 -(480 + 69 + 458)))) then v217=v97[v215 + 2];if (((342 + 42)<((8074 -(668 + 275)) -4645)) and (v217>(1940 -(1836 + 104)))) then if (((1597 + 3044)>(5213 -1972)) and (v216>v97[v215 + (1 -0)])) then v76=v99[5 -2];else v97[v215 + 3]=v216;end elseif ((v216<v97[v215 + (408 -(94 + 313))]) or ((6532 -(729 + 1213))>=4982)) then v76=v99[1984 -(1245 + 736)];else v97[v215 + 3]=v216;end break;end end break;end if ((v213==0) or (((715 + 1688) -1173)==(2198 + 1221))) then v214=0 + 0;v215=nil;v213=1112 -(752 + 359);end if ((v213==(1 + 0)) or (4240>=4266)) then v216=nil;v217=nil;v213=2;end end end elseif ((2166<(4337 -(888 + 429))) and (v100<=(75 -37))) then if (((10461 -(8610 -(826 + 526)))>=((3423 -1957) -715)) and (v100<=(1215 -(51 + 1129)))) then if ((v100<=(257 -(53 + 171))) or (4816<=(652 -262))) then local v166=0 + 0;local v167;local v168;while true do if ((132<(2661 -(1041 + 532))) and (v166==(1021 -(338 + 682)))) then while true do if (((3627 -(438 + 872))==2317) and (v167==(889 -(302 + 142 + 445)))) then v168=v99[2];v97[v168]=v97[v168](v12(v97,v168 + 1 + 0,v99[3]));break;end end break;end if ((v166==(0 -0)) or ((6381 -(1432 + 95))<=(175 + 2844))) then local v242=0;while true do if (((3510 -(10 + 528))==(718 + 2254)) and (v242==((387 + 1276) -(1447 + 216)))) then v167=(615 -(105 + 510)) -0;v168=nil;v242=1 + 0 + 0;end if ((v242==1) or ((2615 -(2419 -(937 + 34)))==3127)) then v166=1;break;end end end end elseif ((v100>(26 + 8)) or (((32022 -17887) -10402)>=(5893 -(696 + 1054)))) then v97[v99[2]]=v36[v99[3]];else v97[v99[1 + 1]]=v99[3 + (689 -(220 + 469))];end elseif ((v100<=36) or ((1043 -((670 -419) + 170))<=(872 -(946 -(142 + 326))))) then v35[v99[6 -3]]=v97[v99[948 -(344 + 602)]];elseif (((3147 -(1053 + 554))>((209 -150) -24)) and (v100==(116 -79))) then local v222=0 + 0;local v223;local v224;while true do if ((v222==(0 -0)) or ((2055 -(1425 + 183))>(5214 -(152 + (1616 -(24 + 31)))))) then v223=(698 + 588) -(337 + 949);v224=nil;v222=4 -(1 + 2);end if (((453 + 801)>=(3886 -(1122 + 1618))) and (v222==1)) then while true do if (((1609 + 893)>=(3897 -1472)) and (v223==(514 -(111 + 403)))) then v224=v99[2];v97[v224]=v97[v224](v12(v97,v224 + (2 -1),v77));break;end end break;end end else local v225=0 -0;local v226;local v227;local v228;while true do if ((v225==1) or (((1821 + 2417) -2062)==(6032 -(734 + 513)))) then v228=nil;while true do if ((v226==(0 -0)) or (981>=(6680 -2602))) then v227=0;v228=nil;v226=1868 -(322 + 1545);end if (((1746 -776)<=3114) and ((645 -(65 + 579))==v226)) then while true do if ((v227==(0 + 0)) or ((412 + 322)==3251)) then v228=v99[1412 -(1082 + 328)];v97[v228](v12(v97,v228 + 1 + 0,v77));break;end end break;end end break;end if ((v225==0) or (1799<=(187 + 62))) then v226=0 + 0;v227=nil;v225=(29 + 135) -(105 + 58);end end end elseif (((1433 + 2595)>(3034 -1754)) and (v100<=(891 -(727 + 123)))) then if (((171 -64)<=2444) and (v100<=(36 + 3))) then v36[v99[1 + 1 + 1]]=v97[v99[2 -0]];elseif (((4541 -3198)==1343) and (v100>(38 + 2))) then v97[v99[2]]();else v97[v99[2]]=v97[v99[1 + 2]]%v99[4];end elseif ((((2490 -905) -(114 + 121))==1350) and (v100<=(1 + 41))) then v97[v99[1 + 1]]=v97[v99[774 -(293 + 478)]];elseif ((v100==43) or ((3949 -(129 + 987))>=(10083 -6085))) then v97[v99[4 -2]]=v99[14 -11] + v97[v99[1869 -(214 + 1651)]];else local v231=0 -0;local v232;local v233;local v234;local v235;while true do if ((v231==(0 -0)) or ((208 + 139)>=(939 + 3510))) then v232=v99[3 -1];v233,v234=v94(v97[v232](v97[v232 + 1]));v231=1296 -(1149 + 146);end if ((v231==(3 -(1064 -(391 + 672)))) or ((1968 -878)>=((3495 + 14) -(338 + 752 + 187)))) then for v273=v232,v77 do local v274=0 + 0;local v275;while true do if ((v274==(0 + 0 + 0)) or (2012<(123 + 1645))) then v275=867 -(613 + 254);while true do if (((8993 -5207)==3786) and (v275==(678 -(210 + 468)))) then v235=v235 + (2 -1);v97[v273]=v233[v235];break;end end break;end end end break;end if ((v231==(1356 -(56 + 957 + 342))) or ((3183 -(217 + 564))<(261 -(84 + 164)))) then local v248=68 -(51 + 17);while true do if ((3130==(6183 -3053)) and (v248==(1 + 0))) then v231=5 -3;break;end if ((1786==((3275 + 5085) -6574)) and (v248==0)) then v77=(v234 + v232) -(1 + 0);v235=0 -(0 -0);v248=1;end end end end end v76=v76 + 1;break;end if ((v103==(0 + (0 -0))) or (1931<(2395 -(79 + 560)))) then v99=v91[v76];v100=v99[1 + 0 + 0];v103=3 -2;end end end end;v75=3;end if (v75==1) then v78={...};v79=v11("#",...) -1;v75=2;end if (0==v75) then v76=1;v77= -1;v75=1;end if (v75==3) then A,B=v26(v10(v80));if  not A[1] then local v101=v34[4][v76] or "?";error("Script error at ["   .. v101   .. "]:"   .. A[2]);else return v12(A,2,B);end break;end end end;end end end return v28(v27(),{},v16)(...);end vv8(),...);end